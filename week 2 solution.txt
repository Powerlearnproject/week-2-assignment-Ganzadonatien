Week 2: Essential Data Retrieval & Filtering (Focus on Expense Tracker Data)


1.1 Retrieving All Expenses:

Write an SQL query to retrieve all data points (columns) from the "Expenses" table.

USE expense_tracker;
SELECT * FROM expenses;

1.2 Specific Columns:** 

Modify your query to select only specific columns relevant to your analysis. For example, you might choose "date," "category," and "amount" to analyze spending patterns by category and date.

USE expense_tracker;
-- SELECT * FROM expenses;
SELECT date, category, amount FROM Expenses;
1.3 Filtering by Date Range:** 
Write a query to retrieve expenses charged between a specific date range (e.g., January 1, 2021, to December 15, 2024).
Remember to use the appropriate data type for the "date" column when specifying the date range in your query.


USE expense_tracker;
-- SELECT * FROM expenses;
-- SELECT date, category, amount FROM Expenses;
SELECT date, category, amount 
FROM Expenses
WHERE date BETWEEN '2021-01-01' AND '2024-12-15';
2.1 Filtering by Category:** 
Write a query to find all expenses belonging to a specific category (e.g., "Entertainment").

SELECT date, category, amount FROM Expenses WHERE category = 'Entertainment';

2.2 Filtering with Comparison Operators:** 
Find expenses with an amount greater than a certain value (e.g., $50).

USE expense_tracker;
-- SELECT * FROM expenses;
-- SELECT date, category, amount FROM Expenses;
-- SELECT date, category, amount FROM Expenses WHERE date BETWEEN '2021-01-01' AND '2024-12-15';
-- SELECT date, category, amount FROM Expenses WHERE category = 'Entertainment';
SELECT date, category, amount FROM Expenses WHERE amount > 50.00;

2.3 Combining Filters (AND):**  
Refine your query to find expenses that meet multiple criteria. For example, you might search for expenses greater than $75 AND belonging to the "Food" category.

USE expense_tracker;
-- SELECT * FROM expenses;
-- SELECT date, category, amount FROM Expenses;
-- SELECT date, category, amount FROM Expenses WHERE date BETWEEN '2021-01-01' AND '2024-12-15';
-- SELECT date, category, amount FROM Expenses WHERE category = 'Entertainment';
-- SELECT date, category, amount FROM Expenses WHERE amount > 50.00;
SELECT date, category, amount FROM Expenses WHERE amount > 75.00 AND category = 'Food';

2.4 Combining Filters (OR):** 
Modify your query to find expenses belonging to one category or another (e.g., "Transportation" OR "Groceries").

USE expense_tracker;
-- SELECT * FROM expenses;
-- SELECT date, category, amount FROM Expenses;
-- SELECT date, category, amount FROM Expenses WHERE date BETWEEN '2021-01-01' AND '2024-12-15';
-- SELECT date, category, amount FROM Expenses WHERE category = 'Entertainment';
-- SELECT date, category, amount FROM Expenses WHERE amount > 50.00;
-- SELECT date, category, amount FROM Expenses WHERE amount > 75.00 AND category = 'Food';
SELECT date, category, amount FROM Expenses WHERE category = 'Transportation' OR category = 'Groceries';
2.5 Filtering with NOT:** 
Write a query to display expenses unrelated to a specific category (e.g., "Rent").

SELECT date, category, amount FROM Expenses WHERE category != 'Rent';

3.1 Sorting by Amount:** 
Write a query to display all expenses sorted by amount in a specific order (e.g., descending order for highest to lowest spending).


SELECT date, category, amount FROM Expenses ORDER BY amount DESC;
3.2 Sorting by Date and Category:**  
Modify your query to sort expenses based on multiple columns. For example, you might sort first by date (descending order) and then by category (ascending order) to see recent spending trends by category.

SELECT date, category, amount FROM Expenses ORDER BY date DESC, category ASC;
4.1 Write SQL commands to achieve the following:**

* We don't have a table for income yet. Create a table named "Income" with columns for:

-- Create the Income table
CREATE TABLE IF NOT EXISTS Income (income_id INT PRIMARY KEY AUTO_INCREMENT, amount DECIMAL(10,2) NOT NULL,date DATE NOT NULL,source VARCHAR(50) NOT NULL);

4.2 After creating the "Income" table, you realize you also want to track the income category "source" (e.g., "Salary," "Freelance Work").** 

* Use ALTER TABLE to add a new column named "category" of type VARCHAR(50).

-- Add a new column named 'category' to the Income table
ALTER TABLE Income ADD COLUMN category VARCHAR(50);

4.3 Let's say you decide tracking the income source isn't necessary for now.**

* Use ALTER TABLE again to remove the "source" column from the "Income" table.

-- Remove the 'source' column from the Income table

ALTER TABLE Income DROP COLUMN source;

Imagine you no longer need the "Income" table entirely. Experiment how to Use DROP TABLE to permanently remove it from your database.

-- Drop the Income table
DROP TABLE IF EXISTS Income;



ALL QUERIES

USE expense_tracker;
-- SELECT * FROM expenses;
-- SELECT date, category, amount FROM Expenses;
-- SELECT date, category, amount FROM Expenses WHERE date BETWEEN '2021-01-01' AND '2024-12-15';
-- SELECT date, category, amount FROM Expenses WHERE category = 'Entertainment';
-- SELECT date, category, amount FROM Expenses WHERE amount > 50.00;
-- SELECT date, category, amount FROM Expenses WHERE amount > 75.00 AND category = 'Food';
-- SELECT date, category, amount FROM Expenses WHERE category = 'Transportation' OR category = 'Groceries';
-- SELECT date, category, amount FROM Expenses ORDER BY amount DESC;
-- SELECT date, category, amount FROM Expenses ORDER BY date DESC, category ASC;

-- Create the Income table
-- CREATE TABLE IF NOT EXISTS Income (income_id INT PRIMARY KEY AUTO_INCREMENT, amount DECIMAL(10,2) NOT NULL,date DATE NOT NULL,source VARCHAR(50) NOT NULL);
-- Add a new column named 'category' to the Income table
-- ALTER TABLE Income ADD COLUMN category VARCHAR(50);
-- Remove the 'source' column from the Income table

-- ALTER TABLE Income DROP COLUMN source;
-- Drop the Income table
DROP TABLE IF EXISTS Income;







